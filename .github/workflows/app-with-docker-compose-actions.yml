name: App With Github Actions with Docker-Compose CI/CD

on:
  workflow_dispatch

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest

    steps:
    - name: Checkout and Git Pull
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Check directory structure
      run: ls

    - name: Set application.properties
      run: |
        cd ./src/main/resources
        touch ./application.properties
        echo "${{secrets.APPLICATION_PROPERTIES}}" >> ./application.properties
      shell: bash
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Naming jar file
      run: mv ./target/*.jar ./target/app.jar

    - name: Check jar file
      run: ls ./target

    - name: Move jar file to Backend Folder
      run: mv ./target/app.jar backend/app.jar

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Backend-Server and push
      uses: docker/build-push-action@v6
      with:
        context: ./backend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/app-with-actions:latest
    
    - name: Build MySQL-Server and push
      uses: docker/build-push-action@v6
      with:
        context: ./db
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/mysql-server:latest

    - name: Send docker-compose.yml through SCP
      uses: appleboy/scp-action@v0.1.7
      with: 
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        source: docker-compose.yml
        target: /home/ubuntu

  cd:
    name: CD
    needs: ci
    runs-on: ubuntu-latest
    steps:
            
      - name: Execute deployment script
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd
            sudo docker-compose down
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/app-with-actions
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/mysql-server
            sudo docker-compose up -d
            sudo docker image prune -a -f
